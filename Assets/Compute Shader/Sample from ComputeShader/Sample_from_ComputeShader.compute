#pragma kernel CSMain

struct SampleData
{
    float4 color;
};


RWTexture2D<float4> Result;
RWStructuredBuffer<SampleData> sampleData;
float idx;
float idy;
bool visualizeSample;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
    //Result[id.xy] = float4(id.x/128.0, id.y/128.0, 0.0, 0.0);

    if (id.x == idx && id.y == idy)
    {
        SampleData sData = sampleData[0];
        sData.color = Result[id.xy];
        sampleData[0] = sData;
    }

    if (visualizeSample == true)
    {
        // Visualize Sample Location
        float2 offsets[] = { float2(-1,  1), float2(0,  1), float2(1,  1),
                             float2(-1,  0),                float2(1,  0),
                             float2(-1, -1), float2(0, -1), float2(1, -1) };
        int mode[] = { 0, 1, 0,
                       1,    1,
                       0, 1, 0 };

        for (int i = 0; i < 8; i++)
        {
            float2 offset = offsets[i];
            if (id.x == idx + offset.x && id.y == idy + offset.y)
            {
                if (mode[i] == 1)
                    Result[id.xy] = Result[float2(idx, idy)];
                else
                    Result[id.xy] = 1;
            }
        }
    }
}
